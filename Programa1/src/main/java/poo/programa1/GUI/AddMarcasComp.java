/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package poo.programa1.GUI;

import java.util.Map;
import poo.programa1.*;
import javax.swing.JOptionPane;
import java.text.DateFormat;
import java.util.Date;
import java.text.SimpleDateFormat;
/**
 *
 * @author dandi
 */
public class AddMarcasComp extends javax.swing.JFrame {
     private Disciplina disciplina;
     private Competencia competencia;
     private Prueba prueba;
     private Atleta atleta;
     private Marca marca;
     /**
      * Creates new form AddMarcasComp
      */
     public AddMarcasComp() {
          initComponents();
          this.setLocationRelativeTo(null);
          FillComboCompetencias();
          FillComboAtletas();
          ComboCompetencias2.setSelectedItem(null);
          ComboDisciplinas2.setSelectedItem(null);
          ComboPruebas2.setSelectedItem(null);
          ComboAtletas.setSelectedItem(null);
     }
     private void FillComboCompetencias(){
          if (!Competencia.competencias.isEmpty() ){
               for(Map.Entry entry : Competencia.competencias.entrySet()){
                    Object Items = entry.getKey();
                    ComboCompetencias2.addItem((String) Items);
               }
          }
     }
     
     private void FillComboDisciplinas(){
          if (competencia == null){
               return;
          }
          ComboDisciplinas2.removeAllItems();
          if (!competencia.disciplinasDict.isEmpty()){
               for(Map.Entry entry : competencia.disciplinasDict.entrySet()){
                    Object Items = entry.getKey();
                    ComboDisciplinas2.addItem((String) Items);
               }
          }
     }
     
     private void FillComboPruebas(){
          if (disciplina == null){
               return;
          }
          ComboPruebas2.removeAllItems();
          if (!competencia.pruebasDict.isEmpty()){
               for(Prueba pruebaIter : competencia.pruebasDict.get(disciplina)){
                   // Object Items = ;
                    ComboPruebas2.addItem(pruebaIter.getNombre());
               }
          }
     }
     
     private void FillComboAtletas(){
          Atleta.List.forEach((key, value) -> {
            if (value instanceof Atleta){
                ComboAtletas.addItem(key);
            }
        });
     }

     /**
      * This method is called from within the constructor to initialize the
      * form. WARNING: Do NOT modify this code. The content of this method is
      * always regenerated by the Form Editor.
      */
     @SuppressWarnings("unchecked")
     // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
     private void initComponents() {

          jLabel1 = new javax.swing.JLabel();
          jLabel2 = new javax.swing.JLabel();
          jLabel3 = new javax.swing.JLabel();
          jLabel4 = new javax.swing.JLabel();
          jLabel5 = new javax.swing.JLabel();
          jLabel6 = new javax.swing.JLabel();
          ComboCompetencias2 = new javax.swing.JComboBox<>();
          ComboDisciplinas2 = new javax.swing.JComboBox<>();
          ComboPruebas2 = new javax.swing.JComboBox<>();
          ComboAtletas = new javax.swing.JComboBox<>();
          MarcaTXT = new javax.swing.JTextField();
          AceptarButton = new javax.swing.JButton();
          CancelarButton = new javax.swing.JButton();

          setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

          jLabel1.setText("Agregar Marcas a Competencias");

          jLabel2.setText("Competencia");

          jLabel3.setText("Disciplina");

          jLabel4.setText("Prueba");

          jLabel5.setText("Atleta");

          jLabel6.setText("Marca");

          ComboCompetencias2.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ComboCompetencias2ActionPerformed(evt);
               }
          });

          ComboDisciplinas2.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ComboDisciplinas2ActionPerformed(evt);
               }
          });

          ComboPruebas2.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ComboPruebas2ActionPerformed(evt);
               }
          });

          ComboAtletas.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ComboAtletasActionPerformed(evt);
               }
          });

          MarcaTXT.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    MarcaTXTActionPerformed(evt);
               }
          });

          AceptarButton.setText("Aceptar");
          AceptarButton.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    AceptarButtonActionPerformed(evt);
               }
          });

          CancelarButton.setText("Cancelar");
          CancelarButton.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    CancelarButtonActionPerformed(evt);
               }
          });

          javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
          getContentPane().setLayout(layout);
          layout.setHorizontalGroup(
               layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(jLabel2)
                         .addComponent(jLabel3)
                         .addComponent(jLabel4)
                         .addComponent(jLabel6))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                         .addComponent(ComboCompetencias2, 0, 112, Short.MAX_VALUE)
                         .addComponent(ComboDisciplinas2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                         .addComponent(ComboPruebas2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                         .addComponent(MarcaTXT))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                         .addComponent(AceptarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                         .addComponent(CancelarButton, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                    .addGap(30, 30, 30))
               .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(layout.createSequentialGroup()
                              .addGap(119, 119, 119)
                              .addComponent(jLabel1))
                         .addGroup(layout.createSequentialGroup()
                              .addContainerGap()
                              .addComponent(jLabel5)
                              .addGap(54, 54, 54)
                              .addComponent(ComboAtletas, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(122, Short.MAX_VALUE))
          );
          layout.setVerticalGroup(
               layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                    .addComponent(jLabel1)
                    .addGap(11, 11, 11)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(jLabel2)
                         .addComponent(ComboCompetencias2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(layout.createSequentialGroup()
                              .addGap(39, 39, 39)
                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addComponent(jLabel3)
                                   .addComponent(ComboDisciplinas2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                              .addGap(8, 8, 8)
                              .addComponent(AceptarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(32, 32, 32)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(jLabel4)
                         .addComponent(ComboPruebas2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(CancelarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(jLabel5)
                         .addComponent(ComboAtletas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(jLabel6)
                         .addComponent(MarcaTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(27, 27, 27))
          );

          pack();
     }// </editor-fold>//GEN-END:initComponents

     private void AceptarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptarButtonActionPerformed
          // TODO add your handling code here:
          if (ComboCompetencias2.getSelectedItem() == null || ComboDisciplinas2.getSelectedItem() == null ||
                  ComboPruebas2.getSelectedItem() == null ||
                  ComboAtletas.getSelectedItem() == null){
               return;
          }
          for (Prueba pruebaIter : disciplina.pruebas){
               if (pruebaIter.getNombre() == ComboPruebas2.getSelectedItem()){
                    prueba = pruebaIter;
                    break;
               }
          }
          double resultado;
          if (!prueba.getDisciplina().getTipo()){
               try {
               resultado = Marca.convertToTime(MarcaTXT.getText());
               }
               catch(Exception e){
                   JOptionPane.showMessageDialog(this, "El formato del tiempo es inválido.", 
                           "Error", JOptionPane.ERROR_MESSAGE);
                   return;
               }      
          } else {
               try {
                    resultado = Double.parseDouble(MarcaTXT.getText());
               }
               catch(Exception e){
                    JOptionPane.showMessageDialog(this, "La distancia es inválida.", 
                           "Error", JOptionPane.ERROR_MESSAGE);
                   return;
               }
          }
          atleta = (Atleta)Persona.List.get((String) ComboAtletas.getSelectedItem());
          if (!(atleta instanceof Atleta)){
               JOptionPane.showMessageDialog(this, "Esa persona no es atleta.", 
                           "Error", JOptionPane.ERROR_MESSAGE);
                   return;
          }
          for (Marca marcaIter : competencia.marcas){
               if (marcaIter.equals(atleta, resultado, prueba, competencia)){
                    JOptionPane.showMessageDialog(this, "Esa marca ya está en la lista.", 
                    "Error", JOptionPane.ERROR_MESSAGE);
                     return;
               }
               if (marcaIter.getAtleta().getId().equals(atleta.getId()) && marcaIter.getPrueba().getNombre().equals(prueba.getNombre())){
                    JOptionPane.showMessageDialog(this, "Ese atleta ya tiene marca en la prueba.", 
                    "Error", JOptionPane.ERROR_MESSAGE);
                     return;
               }
          }
          
          competencia.agregarMarca(atleta, resultado, prueba);
          JOptionPane.showMessageDialog(this, "Marca agregada a la competencia con éxito.");

             
     }//GEN-LAST:event_AceptarButtonActionPerformed

     private void CancelarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarButtonActionPerformed
          // TODO add your handling code here:
          dispose();
          MenuPrincipal menu = new MenuPrincipal();
          menu.setVisible(true);
     }//GEN-LAST:event_CancelarButtonActionPerformed

     private void ComboAtletasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboAtletasActionPerformed
          // TODO add your handling code here:
     }//GEN-LAST:event_ComboAtletasActionPerformed

     private void ComboPruebas2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboPruebas2ActionPerformed
          // TODO add your handling code here:
     }//GEN-LAST:event_ComboPruebas2ActionPerformed

     private void ComboDisciplinas2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboDisciplinas2ActionPerformed
          // TODO add your handling code here:
          if (competencia == null){
               return;
          }
          if (competencia.disciplinasDict.containsKey((String) ComboDisciplinas2.getSelectedItem())){
               disciplina = competencia.disciplinasDict.get((String) ComboDisciplinas2.getSelectedItem());
               FillComboPruebas();
          }
     }//GEN-LAST:event_ComboDisciplinas2ActionPerformed

     private void MarcaTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarcaTXTActionPerformed
          // TODO add your handling code here:
     }//GEN-LAST:event_MarcaTXTActionPerformed

     private void ComboCompetencias2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboCompetencias2ActionPerformed
          // TODO add your handling code here:
          competencia = Competencia.competencias.get((String)ComboCompetencias2.getSelectedItem());
          if (competencia == null){
               return;
          }
          FillComboDisciplinas();
     }//GEN-LAST:event_ComboCompetencias2ActionPerformed

     /**
      * @param args the command line arguments
      */
     public static void main(String args[]) {
          /* Set the Nimbus look and feel */
          //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
          /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
           */
          try {
               for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                         javax.swing.UIManager.setLookAndFeel(info.getClassName());
                         break;
                    }
               }
          } catch (ClassNotFoundException ex) {
               java.util.logging.Logger.getLogger(AddMarcasComp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          } catch (InstantiationException ex) {
               java.util.logging.Logger.getLogger(AddMarcasComp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          } catch (IllegalAccessException ex) {
               java.util.logging.Logger.getLogger(AddMarcasComp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          } catch (javax.swing.UnsupportedLookAndFeelException ex) {
               java.util.logging.Logger.getLogger(AddMarcasComp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          }
          //</editor-fold>

          /* Create and display the form */
          java.awt.EventQueue.invokeLater(new Runnable() {
               public void run() {
                    new AddMarcasComp().setVisible(true);
               }
          });
     }

     // Variables declaration - do not modify//GEN-BEGIN:variables
     private javax.swing.JButton AceptarButton;
     private javax.swing.JButton CancelarButton;
     private javax.swing.JComboBox<String> ComboAtletas;
     private javax.swing.JComboBox<String> ComboCompetencias2;
     private javax.swing.JComboBox<String> ComboDisciplinas2;
     private javax.swing.JComboBox<String> ComboPruebas2;
     private javax.swing.JTextField MarcaTXT;
     private javax.swing.JLabel jLabel1;
     private javax.swing.JLabel jLabel2;
     private javax.swing.JLabel jLabel3;
     private javax.swing.JLabel jLabel4;
     private javax.swing.JLabel jLabel5;
     private javax.swing.JLabel jLabel6;
     // End of variables declaration//GEN-END:variables
}
